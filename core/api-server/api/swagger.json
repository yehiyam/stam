{
  "swagger": "2.0",
  "info": {
    "title": "algo API",
    "description": "algorithm flows extraordinaire",
    "version": "1.0.0"
  },
  "host": "localhost",
  "schemes": [
    "https"
  ],
  "basePath": "/v1",
  "produces": [
    "application/json"
  ],
  "paths": {
    "/run": {
      "post": {
        "summary": "run algorithm flow",
        "description": "The run endpoint initiates an algorithm flow with the input recieved and returns the ID of the running pipeline. ID returned can be used as a reference for the flow run to retrieve run status, stop it, etc.",
        "parameters": [
          {
            "in": "body",
            "name": "pipelineRunData",
            "description": "an object representing all information needed for pipeline execution",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runRequest"
            }
          }
        ],
        "tags": [
          "Execution"
        ],
        "responses": {
          "200": {
            "description": "pipeline execution data",
            "schema": {
              "$ref": "#/definitions/pipelineExecutionStatus"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/runStored": {
      "post": {
        "summary": "run algorithm flow",
        "description": "The run endpoint initiates an algorithm flow with the input recieved and returns the ID of the running pipeline. ID returned can be used as a reference for the flow run to retrieve run status, stop it, etc.",
        "parameters": [
          {
            "in": "body",
            "name": "storedpipelineRunData",
            "description": "an object representing all information needed for stored pipeline execution",
            "required": true,
            "schema": {
              "$ref": "#/definitions/runStoredRequest"
            }
          }
        ],
        "tags": [
          "Execution"
        ],
        "responses": {
          "200": {
            "description": "pipeline execution data",
            "schema": {
              "$ref": "#/definitions/pipelineExecutionStatus"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/stop": {
      "post": {
        "summary": "stop pipeline execution",
        "description": "call to stop the flow execution\n",
        "parameters": [
          {
            "name": "flow_execution_id",
            "required": true,
            "in": "query",
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier representing wokflow execution - is given in response to calling pipeline run method ."
          },
          {
            "name": "reason",
            "in": "query",
            "description": "reason for stopping.",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "Execution"
        ],
        "responses": {
          "200": {
            "description": "the OK string",
            "schema": {
              "type": "string"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "summary": "wokflow execution status",
        "description": "reurns a status for the current pipeline.",
        "parameters": [
          {
            "name": "flow_execution_id",
            "in": "query",
            "type": "string",
            "format": "uuid",
            "description": "Unique identifier representing wokflow execution - is given in response to calling pipeline run method ."
          }
        ],
        "tags": [
          "Execution"
        ],
        "responses": {
          "200": {
            "description": "An array of products",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/pipelineExecutionStatus"
              }
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/store/{pipelineName}": {
      "get": {
        "summary": "get pipeline data from store",
        "description": "returns stored pipeline",
        "parameters": [
          {
            "in": "path",
            "name": "pipelineName",
            "description": "pipeline name to get from the store",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Store"
        ],
        "responses": {
          "200": {
            "description": "action summery",
            "schema": {
              "$ref": "#/definitions/defaultResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "delete stored pipeline",
        "description": "removes selected stored pipeline from store",
        "parameters": [
          {
            "in": "path",
            "name": "pipelineName",
            "description": "pipeline name to get from the store",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Store"
        ],
        "responses": {
          "200": {
            "description": "action summery",
            "schema": {
              "$ref": "#/definitions/defaultResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/store": {
      "post": {
        "summary": "add a pipeline",
        "description": "adds the given pipeline to the store.",
        "parameters": [
          {
            "in": "body",
            "name": "pipeline",
            "description": "pipeline descriptor to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/pipeline"
            }
          }
        ],
        "tags": [
          "Store"
        ],
        "responses": {
          "200": {
            "description": "Profile information for a user",
            "schema": {
              "$ref": "#/definitions/defaultResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "get": {
        "summary": "get all pipelines",
        "description": "returns all pipelines that are currently in the store (names list)",
        "tags": [
          "Store"
        ],
        "responses": {
          "200": {
            "description": "action summery",
            "schema": {
              "$ref": "#/definitions/defaultResponse"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/results/{executionID}": {
      "get": {
        "summary": "get run result",
        "description": "returns result (json) for the execution of a spesific pipeline run. if called before result is determined - returns error.",
        "parameters": [
          {
            "in": "path",
            "name": "executionID",
            "description": "executionID to getresults for",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "Execution"
        ],
        "responses": {
          "200": {
            "description": "action summery",
            "schema": {
              "$ref": "#/definitions/pipelineExecutionResult"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "pipelineNode": {
      "type": "object",
      "properties": {
        "nodeName": {
          "type": "string"
        },
        "algorithmName": {
          "type": "string",
          "description": "Unique identifier representing a specific function. e.g. \"Average\""
        },
        "isBatch": {
          "type": "boolean",
          "description": "true signals this step expects an array of inputs and should be executed as many times as the input array has elements and return an array of answers."
        },
        "input": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "extra input, in addition to the output from parent step."
        }
      }
    },
    "pipelineLink": {
      "type": "object",
      "properties": {
        "source": {
          "type": "string",
          "description": "Unique identifier representing a specific node"
        },
        "target": {
          "type": "string",
          "description": "Unique identifier representing a specific node"
        }
      }
    },
    "pipeline": {
      "type": "object",
      "description": "systemwide unique name",
      "properties": {
        "name": {
          "type": "string"
        },
        "nodes": {
          "description": "Unique identifier representing a specific function. e.g. \"Average\"",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineNode"
          }
        },
        "links": {
          "description": "Unique identifier representing a specific function. e.g. \"Average\"",
          "type": "array",
          "items": {
            "$ref": "#/definitions/pipelineLink"
          }
        }
      }
    },
    "Webhook": {
      "type": "object",
      "description": "uri's to call uopn events during algorithm flow execution",
      "properties": {
        "progressHook": {
          "type": "string",
          "description": "uri to activate upon error"
        },
        "resultHook": {
          "type": "string",
          "description": "uri to activate upon flow termination (be it a sucessfull one or not"
        }
      }
    },
    "pipelineExecutionStatus": {
      "type": "object",
      "description": "status for pipeline execution",
      "properties": {
        "executionID": {
          "type": "string",
          "format": "uuid"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "defaultResponse": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "fields": {
          "type": "string"
        }
      }
    },
    "runRequest": {
      "type": "object",
      "properties": {
        "pipelineDescriptor": {
          "$ref": "#/definitions/pipeline"
        },
        "flowInput": {
          "description": "input object",
          "type": "object"
        },
        "Webhook": {
          "$ref": "#/definitions/Webhook"
        }
      }
    },
    "runStoredRequest": {
      "type": "object",
      "properties": {
        "storedpipelineId": {
          "type": "string"
        },
        "flowInput": {
          "description": "input object",
          "type": "object"
        },
        "Webhook": {
          "$ref": "#/definitions/Webhook"
        }
      }
    },
    "pipelineExecutionResult": {
      "type": "object",
      "properties": {
        "result": {
          "description": "input object",
          "type": "object"
        }
      }
    }
  }
}